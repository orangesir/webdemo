java想不到的运行结果7-浮点数精度问题

计算机存储数据采用的是二进制，而平时我们使用十进制，这个就存在一个转换过程中的精度丢失问题。
代码:

class App {

  public static void main(String[] args) {
    float c = 0.75f;
    float a = 0.65f;
    float b = 0.25f;
    System.out.println(a);
    System.out.println(a-b);
    System.out.println(c-a);
    float d = a-b;
    System.out.println(d);
  }

}
运行结果:
0.65
0.39999998
0.100000024
0.39999998
结果有点出乎意料。
不过看一下10进制转换二进制应该就能找到问题了:
2进制的 0.111111.... 转换10进制 2^-1+2^-2+2^-3.......也就是 0.5+0.25+0.125......
就是这个规律，它无法表示0.1,0.2等等。
如果想了解更多可以看一下ieee754协议，大多数的类C语言存储浮点数都使用这个协议(php....)。
在平时的时候这个问题真不算是大问题，但是在精度要求特别严格的时候就要注意这个问题了。
jdk也提供了专门给的处理类:BigDecimal(在计算钱的时候一定要用它哦！)
